@typeparam TItem

<style>
    .table-wrapper {
        overflow-x: auto !important;
        height: 500px;
        display: block !important;
        width: 100% !important;
    }

        .table-wrapper thead th {
            position: sticky;
            top: 0;
            z-index: 1;
        }
        /* Borders */
        .table-wrapper,
        .table-wrapper td {
            box-shadow: inset 1px -1px #8EBDA9;
        }

    .table-wrapperth {
        box-shadow: inset 1px 1px #8EBDA9, 0 1px #8EBDA9;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

        .table-wrapper thead th {
            background-color: black;
            color:white
        }

    /* Zebra striping */
    tr:nth-of-type(odd) {
        background: #eee;
    }

    th {
        background: #8EBDA9;
        /*color: white; */
        font-weight: bold;
    }

    td, th {
        padding: .625em;
        border: 1px solid #ccc;
        text-align: center;
    }

</style>

<br />
<h3>@Title</h3>
<div class="table-wrapper">
    <table id="@Id" class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                @HeaderTemplate
            </tr>
        </thead>
        <tbody>
            @if (Items != null)
            {
                @foreach (var item in Items)
                {
                    <tr>
                        @RowTemplate(item)
                    </tr>
                }  
            }

        </tbody>
        <tfoot>
            <tr>
                @FooterTemplate
            </tr>
        </tfoot>
    </table>
</div>
@code {
    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    [Parameter]
    public RenderFragment? HeaderTemplate { get; set; }

    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }

    [Parameter]
    public RenderFragment? FooterTemplate { get; set; }

    [Parameter]
    public IReadOnlyList<TItem>? Items { get; set; }
}